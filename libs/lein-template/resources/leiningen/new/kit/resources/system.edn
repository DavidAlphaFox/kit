{
 :system/env
 #profile {:dev  :dev
           :test :test
           :prod :prod}
<% if metrics? %>
 :metrics/prometheus
 {}<% endif %>
<% if repl? %>
 :repl/server
 {:port #long #or [#env REPL_PORT 7000]
  :host #or [#env REPL_HOST "0.0.0.0"]}<% endif %>
 <% if redis? %>
 :cache/redis
 {:ttl  3600
  :conn {:pool {}
         :spec {:uri #env REDIS_URI}}}<% endif %>

 :server/undertow
 {:port    #long #or [#env PORT 3000]
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router                #ig/ref :router/core <% if metrics? %>
  :metrics               #ig/ref :metrics/prometheus <% endif %>
  :api-path              "/api"
  :cookie-session-config {:cookie-secret          #or [#env COOKIE_SECRET "16charsecrethere"]
                          :cookie-name            "<<ns-name>>"
                          :cookie-default-max-age 86400}
  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config  {:params    {:urlencoded true
                                      :multipart  true
                                      :nested     true
                                      :keywordize true}
                          :cookies   true
                          :session   {:flash true
                                      :cookie-attrs {:http-only true, :same-site :strict}}
                          :security  {:anti-forgery   false
                                      :xss-protection {:enable? true, :mode :block}
                                      :frame-options  :sameorigin
                                      :content-type-options :nosniff}
                          :static    {:resources "public"}
                          :responses {:not-modified-responses true
                                      :absolute-redirects     true
                                      :content-types          true
                                      :default-charset        "utf-8"}}
  }

 :reitit.routes/api
 {:base-path "/api"
  :env       #ig/ref :system/env <% if metrics? %>

  :metrics   #ig/ref :metrics/prometheus <% endif %>
  }

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}
 <% if quartz? %>
 :cronut/scheduler
 {:schedule []}<% endif %>
 <% if selmer? %>
 :templating/selmer
 {}<% endif %>
 <% if crux? %>
 ;; https://opencrux.com/reference/configuration.html
 :db.crux/node
 {}
 <% endif %>
 <% if sql? %>
 ;; todo handle different kinds of sql sqlite, mysql, etc
 :db.sql/connection
 #profile {:dev  {:jdbc-url "jdbc:postgresql://localhost/<<sanitized>>?user=<<sanitized>>&password=<<sanitized>>"}
           :test {}
           :prod {:jdbc-url   #env JDBC_URL
                  :init-size  1
                  :min-idle   1
                  :max-idle   8
                  :max-active 32}}

 :db.sql/query-fn
 {:conn     #ig/ref :db.sql/connection
  :options  {}
  :filename "queries.sql"}

 :db.sql/migrations
 {:store            :database
  :db               {:datasource #ig/ref :db/connection}
  :migrate-on-init? true}
 <% endif %>
}
