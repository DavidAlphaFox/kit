{
 :system/env
 #profile {:dev  :dev
           :test :test
           :prod :prod}
 {{#metrics?}}

 :metrics/prometheus
 {}{{/metrics?}}
 {{#repl?}}

 :repl/server
 {:port #long #or [#env REPL_PORT 7000]
  :host #or [#env REPL_HOST "0.0.0.0"]}{{/repl?}}
 {{#redis?}}

 :cache/redis
 {:ttl  3600
  :conn {:pool {}
         :spec {:uri #env REDIS_URI}}}{{/redis?}}

 :server/undertow
 {:port    #long #or [#env PORT 3000]
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router   #ig/ref :router/core
  :metrics  #ig/ref :metrics/prometheus
  :api-path "/api"
  }

 :reitit.routes/api
 {:base-path "/api"
  :env       #ig/ref :system/env

  :metrics   #ig/ref :metrics/prometheus
  }

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}
 {{#quartz?}}

 :cronut/scheduler
 {:schedule []}{{/quartz?}}
 {{#selmer?}}

 :templating/selmer
 {} {{/selmer?}}
 {{#crux?}}

 ;; https://opencrux.com/reference/configuration.html
 :db.crux/node
 {:crux.http-server/server {:port 3000}}
 {{/crux?}}
 {{#sql?}}

 :db.sql/connection
 #profile {:dev  {:jdbc-url "jdbc:postgresql://localhost/{{sanitized}}?user={{sanitized}}&password={{sanitized}}"}
           :test {}
           :prod {:jdbc-url   #env JDBC_URL
                  :init-size  1
                  :min-idle   1
                  :max-idle   8
                  :max-active 32}

 :db.sql/query-fn
 {:conn     #ig/ref :db.sql/connection
  :options  {}
  :filename "queries.sql"}

 :db.sql/migrations
 {:store            :database
  :db               {:datasource #ig/ref :db/connection}
  :migrate-on-init? true}
 {{/sql?}}

}